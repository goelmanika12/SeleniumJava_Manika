// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AvivaAssessment.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Google search functionality", Description="\tOpen the google page and search with keyword AVIVA\r\n\tverify the number of links " +
        "returned and \r\n\tprint the 5th link text.", SourceFile="Features\\AvivaScenariosTest.feature", SourceLine=0)]
    public partial class GoogleSearchFunctionalityFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AvivaScenariosTest.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Google search functionality", "\tOpen the google page and search with keyword AVIVA\r\n\tverify the number of links " +
                    "returned and \r\n\tprint the 5th link text.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("launch the google home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        public virtual void SearchWithAvivaKeywordOnGoogleHomePageAndPrintThe5ThLinkText(string keyword, string count, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PositiveScenario"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with Aviva keyword on Google home page and print the 5th link text", @__tags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.And(string.Format("search with the string \'{0}\'", keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.When("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
    testRunner.Then("prints the 5th link text of results page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.And(string.Format("number of links should be {0}", count), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search with Aviva keyword on Google home page and print the 5th link text, AVIVA", new string[] {
                "PositiveScenario"}, SourceLine=17)]
        public virtual void SearchWithAvivaKeywordOnGoogleHomePageAndPrintThe5ThLinkText_AVIVA()
        {
#line 11
this.SearchWithAvivaKeywordOnGoogleHomePageAndPrintThe5ThLinkText("AVIVA", "11", ((string[])(null)));
#line hidden
        }
        
        public virtual void SearchWithAvivaKeywordOnGoogleHomePageAndInvalidLoginOnAVIVALoginPage(string keyword1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NegativeScenario"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with Aviva keyword on Google home page and Invalid login on AVIVA login pa" +
                    "ge", @__tags);
#line 21
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 22
    testRunner.And(string.Format("search with the string \'{0}\'", keyword1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I click on Aviva link and login button without providing credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("the result should be the error message display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search with Aviva keyword on Google home page and Invalid login on AVIVA login pa" +
            "ge, AVIVA", new string[] {
                "NegativeScenario"}, SourceLine=27)]
        public virtual void SearchWithAvivaKeywordOnGoogleHomePageAndInvalidLoginOnAVIVALoginPage_AVIVA()
        {
#line 21
this.SearchWithAvivaKeywordOnGoogleHomePageAndInvalidLoginOnAVIVALoginPage("AVIVA", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
